# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q-HFEaVHLjvMDdVgvUGro8Q6CMW8m4TM
"""

import tensorflow as tf
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.datasets import mnist
import matplotlib.pyplot as plt

# Carga del dataset
(x_train, y_train), (x_test, y_test) = mnist.load_data()

# Normalización de los datos
x_train = x_train / 255.0
x_test = x_test / 255.0

# Visualización de algunas imágenes
plt.figure(figsize=(10, 10))
for i in range(9):
    plt.subplot(3, 3, i+1)
    plt.imshow(x_train[i], cmap='gray')
    plt.title(f"Etiqueta: {y_train[i]}")
    plt.axis('off')
plt.show()

# Definición de la red
model = Sequential([
    Flatten(input_shape=(28, 28)),  # Aplanar las imágenes 28x28
    Dense(128, activation='relu'),  # Capa oculta con 128 neuronas y ReLU
    Dense(10, activation='softmax') # Capa de salida para clasificación en 10 clases
])

# Compilación del modelo
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Entrenamiento
history = model.fit(x_train, y_train, epochs=10, validation_split=0.2)

# Evaluación en datos de prueba
test_loss, test_accuracy = model.evaluate(x_test, y_test)
print(f"Pérdida en prueba: {test_loss:.4f}")
print(f"Precisión en prueba: {test_accuracy:.4f}")